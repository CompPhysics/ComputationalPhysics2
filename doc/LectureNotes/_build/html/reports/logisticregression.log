Traceback (most recent call last):
  File "/Users/mhjensen/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/mhjensen/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/nbclient/client.py", line 1085, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/mhjensen/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/mhjensen/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/homebrew/Cellar/python@3.9/3.9.10/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/mhjensen/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/nbclient/client.py", line 551, in async_execute
    await self.async_execute_cell(
  File "/Users/mhjensen/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/nbclient/client.py", line 846, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/mhjensen/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/nbclient/client.py", line 748, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%matplotlib inline

# Common imports
import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression, Ridge, Lasso
from sklearn.model_selection import train_test_split
from sklearn.utils import resample
from sklearn.metrics import mean_squared_error
from IPython.display import display
from pylab import plt, mpl
plt.style.use('seaborn')
mpl.rcParams['font.family'] = 'serif'

# Where to save the figures and data files
PROJECT_ROOT_DIR = "Results"
FIGURE_ID = "Results/FigureFiles"
DATA_ID = "DataFiles/"

if not os.path.exists(PROJECT_ROOT_DIR):
    os.mkdir(PROJECT_ROOT_DIR)

if not os.path.exists(FIGURE_ID):
    os.makedirs(FIGURE_ID)

if not os.path.exists(DATA_ID):
    os.makedirs(DATA_ID)

def image_path(fig_id):
    return os.path.join(FIGURE_ID, fig_id)

def data_path(dat_id):
    return os.path.join(DATA_ID, dat_id)

def save_fig(fig_id):
    plt.savefig(image_path(fig_id) + ".png", format='png')

infile = open(data_path("chddata.csv"),'r')

# Read the chd data as  csv file and organize the data into arrays with age group, age, and chd
chd = pd.read_csv(infile, names=('ID', 'Age', 'Agegroup', 'CHD'))
chd.columns = ['ID', 'Age', 'Agegroup', 'CHD']
output = chd['CHD']
age = chd['Age']
agegroup = chd['Agegroup']
numberID  = chd['ID'] 
display(chd)

plt.scatter(age, output, marker='o')
plt.axis([18,70.0,-0.1, 1.2])
plt.xlabel(r'Age')
plt.ylabel(r'CHD')
plt.title(r'Age distribution and Coronary heart disease')
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Input [0;32mIn [1][0m, in [0;36m<module>[0;34m[0m
[0;32m----> 1[0m [43mget_ipython[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mrun_line_magic[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mmatplotlib[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43minline[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      3[0m [38;5;66;03m# Common imports[39;00m
[1;32m      4[0m [38;5;28;01mimport[39;00m [38;5;21;01mos[39;00m

File [0;32m~/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/IPython/core/interactiveshell.py:2204[0m, in [0;36mInteractiveShell.run_line_magic[0;34m(self, magic_name, line, _stack_depth)[0m
[1;32m   2202[0m     kwargs[[38;5;124m'[39m[38;5;124mlocal_ns[39m[38;5;124m'[39m] [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mget_local_scope(stack_depth)
[1;32m   2203[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mbuiltin_trap:
[0;32m-> 2204[0m     result [38;5;241m=[39m [43mfn[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   2205[0m [38;5;28;01mreturn[39;00m result

File [0;32m~/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/IPython/core/magics/pylab.py:99[0m, in [0;36mPylabMagics.matplotlib[0;34m(self, line)[0m
[1;32m     97[0m     [38;5;28mprint[39m([38;5;124m"[39m[38;5;124mAvailable matplotlib backends: [39m[38;5;132;01m%s[39;00m[38;5;124m"[39m [38;5;241m%[39m backends_list)
[1;32m     98[0m [38;5;28;01melse[39;00m:
[0;32m---> 99[0m     gui, backend [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mshell[49m[38;5;241;43m.[39;49m[43menable_matplotlib[49m[43m([49m[43margs[49m[38;5;241;43m.[39;49m[43mgui[49m[38;5;241;43m.[39;49m[43mlower[49m[43m([49m[43m)[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[38;5;28;43misinstance[39;49m[43m([49m[43margs[49m[38;5;241;43m.[39;49m[43mgui[49m[43m,[49m[43m [49m[38;5;28;43mstr[39;49m[43m)[49m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[43margs[49m[38;5;241;43m.[39;49m[43mgui[49m[43m)[49m
[1;32m    100[0m     [38;5;28mself[39m[38;5;241m.[39m_show_matplotlib_backend(args[38;5;241m.[39mgui, backend)

File [0;32m~/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/IPython/core/interactiveshell.py:3327[0m, in [0;36mInteractiveShell.enable_matplotlib[0;34m(self, gui)[0m
[1;32m   3306[0m [38;5;124;03m"""Enable interactive matplotlib and inline figure support.[39;00m
[1;32m   3307[0m 
[1;32m   3308[0m [38;5;124;03mThis takes the following steps:[39;00m
[0;32m   (...)[0m
[1;32m   3324[0m [38;5;124;03m    display figures inline.[39;00m
[1;32m   3325[0m [38;5;124;03m"""[39;00m
[1;32m   3326[0m [38;5;28;01mfrom[39;00m [38;5;21;01mIPython[39;00m[38;5;21;01m.[39;00m[38;5;21;01mcore[39;00m [38;5;28;01mimport[39;00m pylabtools [38;5;28;01mas[39;00m pt
[0;32m-> 3327[0m [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib_inline[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbackend_inline[39;00m [38;5;28;01mimport[39;00m configure_inline_support
[1;32m   3328[0m gui, backend [38;5;241m=[39m pt[38;5;241m.[39mfind_gui_and_backend(gui, [38;5;28mself[39m[38;5;241m.[39mpylab_gui_select)
[1;32m   3330[0m [38;5;28;01mif[39;00m gui [38;5;241m!=[39m [38;5;124m'[39m[38;5;124minline[39m[38;5;124m'[39m:
[1;32m   3331[0m     [38;5;66;03m# If we have our first gui selection, store it[39;00m

File [0;32m~/.local/share/virtualenvs/doc-a-kErR6F/lib/python3.9/site-packages/matplotlib_inline/backend_inline.py:6[0m, in [0;36m<module>[0;34m[0m
[1;32m      1[0m [38;5;124;03m"""A matplotlib backend for publishing figures via display_data"""[39;00m
[1;32m      3[0m [38;5;66;03m# Copyright (c) IPython Development Team.[39;00m
[1;32m      4[0m [38;5;66;03m# Distributed under the terms of the BSD 3-Clause License.[39;00m
[0;32m----> 6[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m
[1;32m      7[0m [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbackends[39;00m[38;5;21;01m.[39;00m[38;5;21;01mbackend_agg[39;00m [38;5;28;01mimport[39;00m (  [38;5;66;03m# noqa[39;00m
[1;32m      8[0m     new_figure_manager,
[1;32m      9[0m     FigureCanvasAgg,
[1;32m     10[0m     new_figure_manager_given_figure,
[1;32m     11[0m )
[1;32m     12[0m [38;5;28;01mfrom[39;00m [38;5;21;01mmatplotlib[39;00m [38;5;28;01mimport[39;00m colors

[0;31mModuleNotFoundError[0m: No module named 'matplotlib'
ModuleNotFoundError: No module named 'matplotlib'

