# Information about all exercises in the file basicmanybody.do.txt.
# The information can be loaded into a Python list of dicts by
#
# f = open('.basicmanybody.exerinfo', 'r')
# exer = eval(f.read())
#
[{'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 1,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'This exercise serves to convince you about the relation between\n'
          'two different single-particle bases, where one could be our new '
          'Hartree-Fock basis and the other a harmonic oscillator basis.\n'
          '\n'
          'Consider a Slater determinant built up of single-particle orbitals '
          '$\\psi_{\\lambda}$, \n'
          'with $\\lambda = 1,2,\\dots,A$. The unitary transformation\n'
          '!bt\n'
          '\\[\n'
          '\\psi_a  = \\sum_{\\lambda} C_{a\\lambda}\\phi_{\\lambda},\n'
          '\\]\n'
          '\n'
          '!et\n'
          'brings us into the new basis.  \n'
          'The new basis has quantum numbers $a=1,2,\\dots,A$.\n'
          'Show that the new basis is orthonormal.\n'
          'Show that the new Slater determinant constructed from the new '
          'single-particle wave functions can be\n'
          'written as the determinant based on the previous basis and the '
          'determinant of the matrix $C$.\n'
          'Show that the old and the new Slater determinants are equal up to a '
          'complex constant with absolute value unity.\n'
          '(Hint, $C$ is a unitary matrix). \n'
          '\n'
          'Starting with the second quantization representation of the Slater '
          'determinant \n'
          '!bt\n'
          '\\[\n'
          '\\Phi_{0}=\\prod_{i=1}^{n}a_{\\alpha_{i}}^{\\dagger}|0\\rangle,\n'
          '\\]\n'
          '\n'
          '!et\n'
          "use Wick's theorem to compute the normalization integral\n"
          '$\\langle\\Phi_{0}|\\Phi_{0}\\rangle$.',
  'title': 'Relation between basis functions',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 2,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'Calculate the matrix elements\n'
          '!bt\n'
          '\\[\n'
          '\\langle '
          '\\alpha_{1}\\alpha_{2}|\\hat{F}|\\alpha_{1}\\alpha_{2}\\rangle\n'
          '\\]\n'
          '\n'
          '!et\n'
          'and\n'
          '!bt\n'
          '\\[\n'
          '\\langle '
          '\\alpha_{1}\\alpha_{2}|\\hat{G}|\\alpha_{1}\\alpha_{2}\\rangle\n'
          '\\]\n'
          '\n'
          '!et\n'
          'with\n'
          '!bt\n'
          '\\[\n'
          '|\\alpha_{1}\\alpha_{2}\\rangle=a_{\\alpha_{1}}^{\\dagger}a_{\\alpha_{2}}^{\\dagger}|0\\rangle '
          ',\n'
          '\\]\n'
          '\n'
          '!et\n'
          '!bt\n'
          '\\[\n'
          '\\hat{F}=\\sum_{\\alpha\\beta}\\langle '
          '\\alpha|\\hat{f}|\\beta\\rangle\n'
          'a_{\\alpha}^{\\dagger}a_{\\beta}  ,\n'
          '\\]\n'
          '\n'
          '!et\n'
          '!bt\n'
          '\\[\n'
          '\\langle \\alpha|\\hat{f}|\\beta\\rangle=\\int '
          '\\psi_{\\alpha}^{*}(x)f(x)\\psi_{\\beta}(x)dx ,\n'
          '\\]\n'
          '\n'
          '!et\n'
          '!bt\n'
          '\\[\n'
          '\\hat{G} = \\frac{1}{2}\\sum_{\\alpha\\beta\\gamma\\delta}\n'
          '\\langle \\alpha\\beta |\\hat{g}|\\gamma\\delta\\rangle\n'
          'a_{\\alpha}^{\\dagger}a_{\\beta}^{\\dagger}a_{\\delta}a_{\\gamma} '
          ',\n'
          '\\]\n'
          '\n'
          '!et\n'
          'and\n'
          '!bt\n'
          '\\[\n'
          '\\langle \\alpha\\beta |\\hat{g}|\\gamma\\delta\\rangle=\n'
          '\\int\\int '
          '\\psi_{\\alpha}^{*}(x_{1})\\psi_{\\beta}^{*}(x_{2})g(x_{1},\n'
          'x_{2})\\psi_{\\gamma}(x_{1})\\psi_{\\delta}(x_{2})dx_{1}dx_{2}\n'
          '\\]\n'
          '\n'
          '!et\n'
          'Compare these results with those from exercise 3c).',
  'title': 'Matrix elements',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 3,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'Show that the onebody part of the Hamiltonian\n'
          '!bt\n'
          '\\[\t     \n'
          '\\hat{H}_0 = \\sum_{pq} \\langle p|\\hat{h}_0|q\\rangle '
          'a^{\\dagger}_p a_q,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'can be written, using standard annihilation and creation operators, '
          'in normal-ordered form as \n'
          '!bt\n'
          '\\[\n'
          '\\hat{H}_0 = \\sum_{pq} \\langle p|\\hat{h}_0|q\\rangle '
          '\\left\\{a^\\dagger_p a_q\\right\\} +\n'
          '             \\sum_i \\langle i|\\hat{h}_0|i\\rangle.\n'
          '\\]\n'
          '\n'
          '!et\n'
          'Explain the meaning of the various symbols. Which reference \n'
          'vacuum has been used?',
  'title': 'Normal-ordered one-body operator',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 4,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'Show that the twobody part of the Hamiltonian\n'
          '!bt\n'
          '\\[\n'
          '  \\hat{H}_I = \\frac{1}{4} \\sum_{pqrs} \\langle '
          'pq|\\hat{v}|rs\\rangle a^\\dagger_p a^\\dagger_q a_s  a_r,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'can be written, using standard annihilation and creation operators, '
          'in normal-ordered form as \n'
          '!bt\n'
          '\\[\n'
          '\\hat{H}_I =\\frac{1}{4} \\sum_{pqrs} \\langle '
          'pq|\\hat{v}|rs\\rangle \\left\\{a^\\dagger_p a^\\dagger_q a_s  '
          'a_r\\right\\}\n'
          '            + \\sum_{pqi} \\langle pi|\\hat{v}|qi\\rangle '
          '\\left\\{a^\\dagger_p a_q\\right\\} \n'
          '            + \\frac{1}{2} \\sum_{ij}\\langle '
          'ij|\\hat{v}|ij\\rangle.\n'
          '\\]\n'
          '\n'
          '!et\n'
          'Explain again the meaning of the various symbols.\n'
          '\n'
          'This exercise is optional: Derive the normal-ordered form of the '
          'threebody part of the Hamiltonian.\n'
          '!bt\n'
          '\\[\n'
          '\\hat{H}_3 = \\frac{1}{36} \\sum_{\\substack{pqr \\\\ stu}}\n'
          '                 \\langle pqr|\\hat{v}_3|stu\\rangle a^\\dagger_p '
          'a^\\dagger_q a^\\dagger_r a_u a_t a_s,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'and specify the contributions to the twobody, onebody and the '
          'scalar part.',
  'title': 'Normal-ordered two-body operator',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 5,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'The aim of this exercise is to set up specific matrix elements that '
          'will turn useful when we start our discussions of the nuclear shell '
          'model. In particular you will notice, depending on the character of '
          'the operator, that many matrix elements will actually be zero.\n'
          '\n'
          'Consider three $N$-particle  Slater determinants  $|\\Phi_0$, '
          '$|\\Phi_i^a\\rangle$ and $|\\Phi_{ij}^{ab}\\rangle$, where the '
          'notation means that \n'
          'Slater determinant $|\\Phi_i^a\\rangle$ differs from '
          '$|\\Phi_0\\rangle$ by one single-particle state, that is a '
          'single-particle\n'
          'state $\\psi_i$ is replaced by a single-particle state $\\psi_a$. \n'
          'It is often interpreted as a so-called one-particle-one-hole '
          'excitation.\n'
          'Similarly, the Slater determinant $|\\Phi_{ij}^{ab}\\rangle$\n'
          'differs by two single-particle states from $|\\Phi_0\\rangle$ and '
          'is normally thought of as a two-particle-two-hole excitation.\n'
          'We assume also that $|\\Phi_0\\rangle$ represents our new vacuum '
          'reference state\n'
          'and the labels $ijk\\dots$ represent single-particle states below '
          'the Fermi level and $abc\\dots$ represent states above the Fermi '
          'level, so-called particle states.\n'
          'We define thereafter a general onebody normal-ordered (with respect '
          'to the new vacuum state) operator \n'
          'as\n'
          '!bt\n'
          '\\[\n'
          '\\hat{F}_N=\\sum_{pq}\\langle p |f |\\beta\\rangle '
          '\\left\\{a_{p}^{\\dagger}a_{q}\\right\\}  ,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'with\n'
          '!bt\n'
          '\\[\n'
          '\\langle p |f| q\\rangle=\\int \\psi_{p}^{*}(x)f(x)\\psi_{q}(x)dx '
          ',\n'
          '\\]\n'
          '\n'
          '!et\n'
          'and a general normal-ordered two-body operator\n'
          '!bt\n'
          '\\[\n'
          '\\hat{G}_N = \\frac{1}{4}\\sum_{pqrs}\n'
          '\\langle pq |g| rs\\rangle_{AS} '
          '\\left\\{a_{p}^{\\dagger}a_{q}^{\\dagger}a_{s}a_{r}\\right\\} ,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'with for example the direct matrix element given as\n'
          '!bt\n'
          '\\[\n'
          '\\langle pq |g| rs\\rangle=\n'
          '\\int\\int \\psi_{p}^{*}(x_{1})\\psi_{q}^{*}(x_{2})g(x_{1}, '
          'x_{2})\\psi_{r}(x_{1})\\psi_{s}(x_{2})dx_{1}dx_{2}\n'
          '\\]\n'
          '\n'
          '!et\n'
          'with $g$ being invariant under the interchange of the coordinates '
          'of two particles.\n'
          'The single-particle states $\\psi_i$ are not necessarily '
          'eigenstates of $\\hat{f}$.  The curly brackets mean that the '
          'operators are normal-ordered with respect to the new vacuum '
          'reference state. \n'
          '\n'
          'How would you write the above Slater determinants in a second '
          'quantization formalism, utilizing the fact that we have defined a '
          'new reference state? \n'
          '\n'
          "Use thereafter Wick's theorem to find the expectation values of \n"
          '!bt\n'
          '\\[\n'
          '\\langle \\Phi_0 \\vert\\hat{F}_N\\vert\\Phi_0\\rangle,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'and\n'
          '!bt\n'
          '\\[\n'
          '\\langle \\Phi_0\\hat{G}_N|\\Phi_0\\rangle.\n'
          '\\]\n'
          '\n'
          '!et\n'
          '\n'
          'Find thereafter \n'
          '!bt\n'
          '\\[\n'
          '\\langle \\Phi_0 |\\hat{F}_N|\\Phi_i^a\\rangle,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'and\n'
          '!bt\n'
          '\\[\n'
          '\\langle \\Phi_0|\\hat{G}_N|\\Phi_i^a\\rangle,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'Finally, find\n'
          '!bt\n'
          '\\[\n'
          '\\langle \\Phi_0 |\\hat{F}_N|\\Phi_{ij}^{ab}\\rangle,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'and\n'
          '!bt\n'
          '\\[\n'
          '\\langle \\Phi_0|\\hat{G}_N|\\Phi_{ij}^{ab}\\rangle.\n'
          '\\]\n'
          '\n'
          '!et\n'
          'What happens with the two-body operator if we have a transition '
          'probability  of the type\n'
          '!bt\n'
          '\\[\n'
          '\\langle \\Phi_0|\\hat{G}_N|\\Phi_{ijk}^{abc}\\rangle,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'where the Slater determinant to the right of the operator differs '
          'by more than two single-particle states?',
  'title': 'Matrix elements using the Slater-Condon rule',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 6,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'Write a program which sets up all possible Slater determinants '
          'given $N=4$ eletrons which can occupy\n'
          'the atomic single-particle states defined by the $1s$, $2s2p$ and '
          '$3s3p3d$ shells. How many single-particle\n'
          'states $n$ are there in total?  Include the spin degrees of freedom '
          'as well.',
  'title': 'Program to set up Slater determinants',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 7,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'Compute the matrix element\n'
          '!bt\n'
          '\\[\n'
          "\\langle\\alpha_{1}\\alpha_{2}\\alpha_{3}|\\hat{G}|\\alpha_{1}'\\alpha_{2}'\\alpha_{3}'\\rangle,\n"
          '\\]\n'
          '\n'
          '!et\n'
          "using Wick's theorem and express the two-body operator\n"
          '$G$ in the occupation number (second quantization) \n'
          'representation.',
  'title': 'Using sympy to compute matrix elements',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 8,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'The last exercise can be solved using the symbolic Python package '
          'called *SymPy*. SymPy is a Python \n'
          'package for general purpose symbolic algebra. There is a physics '
          'module with several interesting submodules.\n'
          'Among these, the submodule called *secondquant*, contains several  '
          'functionalities that allow us to test\n'
          "our algebraic manipulations using Wick's theorem and operators for "
          'second quantization.\n'
          '!bc pyscpro\n'
          'from sympy import *\n'
          'from sympy.physics.secondquant import *\n'
          '\n'
          "i, j = symbols('i,j', below_fermi=True)\n"
          "a, b = symbols('a,b', above_fermi=True)\n"
          "p, q = symbols('p,q')\n"
          'print simplify(wicks(Fd(i)*F(a)*Fd(p)*F(q)*Fd(b)*F(j), '
          'keep_only_fully_contracted=True))\n'
          '\n'
          '!ec\n'
          'The code defines single-particle states above and below the Fermi '
          'level, in addition to the genereal symbols\n'
          '$pq$ which can refer to any type of state below or above the Fermi '
          "level. Wick's theorem is implemented between \n"
          'the creation and annihilation operators *Fd* and *F*, respectively. '
          'Using the simplify option, one can lump together several '
          'Kronecker-$\\delta$ functions.',
  'title': 'Using sympy to compute matrix elements',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 9,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'We can expand the above Python code by defining one-body and '
          'two-body operators using  the following SymPy code \n'
          '!bc pyscpro\n'
          '# This code sets up a two-body Hamiltonian for fermions\n'
          'from sympy import symbols, latex, WildFunction, collect, Rational\n'
          'from sympy.physics.secondquant import F, Fd, wicks, '
          'AntiSymmetricTensor, substitute_dummies, NO\n'
          '\n'
          '# setup hamiltonian\n'
          "p,q,r,s = symbols('p q r s',dummy=True)\n"
          "f = AntiSymmetricTensor('f',(p,),(q,))\n"
          'pr = NO((Fd(p)*F(q)))\n'
          "v = AntiSymmetricTensor('v',(p,q),(r,s))\n"
          'pqsr = NO(Fd(p)*Fd(q)*F(s)*F(r))\n'
          'Hamiltonian=f*pr + Rational(1)/Rational(4)*v*pqsr\n'
          'print "Hamiltonian defined as:", latex(Hamiltonian)\n'
          '\n'
          '!ec\n'
          'Here we have used the *AntiSymmetricTensor* functionality, together '
          'with normal-ordering defined by the *NO* function. \n'
          'Using the *latex* option, this program produces the following '
          'output\n'
          '!bt\n'
          '\\[\n'
          'f^{p}_{q} \\left\\{a^\\dagger_{p} a_{q}\\right\\} - \\frac{1}{4} '
          'v^{qp}_{sr} \\left\\{a^\\dagger_{p} a^\\dagger_{q} a_{r} '
          'a_{s}\\right\\}\n'
          '\\]\n'
          '\n'
          '!et',
  'title': 'Using sympy to compute matrix elements',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 10,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'We can now use this code to compute the matrix elements between two '
          "two-body Slater determinants using Wick's theorem.\n"
          '!bc pyscpro\n'
          'from sympy import symbols, latex, WildFunction, collect, Rational, '
          'simplify\n'
          'from sympy.physics.secondquant import F, Fd, wicks, '
          'AntiSymmetricTensor, substitute_dummies, NO, evaluate_deltas\n'
          '# setup hamiltonian\n'
          "p,q,r,s = symbols('p q r s',dummy=True)\n"
          "f = AntiSymmetricTensor('f',(p,),(q,))\n"
          'pr = NO((Fd(p)*F(q)))\n'
          "v = AntiSymmetricTensor('v',(p,q),(r,s))\n"
          'pqsr = NO(Fd(p)*Fd(q)*F(s)*F(r))\n'
          'Hamiltonian=f*pr + Rational(1)/Rational(4)*v*pqsr\n'
          "c,d = symbols('c, d',above_fermi=True)\n"
          "a,b = symbols('a, b',above_fermi=True)\n"
          '\n'
          'expression = '
          'wicks(F(b)*F(a)*Hamiltonian*Fd(c)*Fd(d),keep_only_fully_contracted=True, '
          'simplify_kronecker_deltas=True)\n'
          'expression = evaluate_deltas(expression)\n'
          'expression = simplify(expression)\n'
          'print "Hamiltonian defined as:", latex(expression)\n'
          '\n'
          '!ec\n'
          'The result is as expected,\n'
          '!bt\n'
          '\\[\n'
          '\\delta_{a c} f^{b}_{d} - \\delta_{a d} f^{b}_{c} - \\delta_{b c} '
          'f^{a}_{d} + \\delta_{b d} f^{a}_{c} + v^{ab}_{cd}.\n'
          '\\]\n'
          '\n'
          '!et',
  'title': 'Using sympy to compute matrix elements',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 11,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'We can continue along these lines and define a normal-ordered '
          'Hamiltonian with respect to a given reference state.\n'
          'In our first step we just define the Hamiltonian\n'
          '!bc pyscpro\n'
          'from sympy import symbols, latex, WildFunction, collect, Rational, '
          'simplify\n'
          'from sympy.physics.secondquant import F, Fd, wicks, '
          'AntiSymmetricTensor, substitute_dummies, NO, evaluate_deltas\n'
          '# setup hamiltonian\n'
          "p,q,r,s = symbols('p q r s',dummy=True)\n"
          "f = AntiSymmetricTensor('f',(p,),(q,))\n"
          'pr = Fd(p)*F(q)\n'
          "v = AntiSymmetricTensor('v',(p,q),(r,s))\n"
          'pqsr = Fd(p)*Fd(q)*F(s)*F(r)\n'
          '#define the Hamiltonian\n'
          'Hamiltonian = f*pr + Rational(1)/Rational(4)*v*pqsr\n'
          '#define indices for states above and below the Fermi level\n'
          'index_rule = {\n'
          "     'below':  'kl',\n"
          "     'above':  'cd',\n"
          "     'general': 'pqrs'\n"
          '     }\n'
          'Hnormal = substitute_dummies(Hamiltonian,new_indices=True, '
          'pretty_indices=index_rule)\n'
          'print "Hamiltonian defined as:", latex(Hnormal)\n'
          '\n'
          '!ec\n'
          'which results in\n'
          '!bt\n'
          '\\[\n'
          'f^{q}_{p} a^\\dagger_{q} a_{p} + \\frac{1}{4} v^{sr}_{qp} '
          'a^\\dagger_{s} a^\\dagger_{r} a_{p} a_{q}\n'
          '\\]\n'
          '\n'
          '!et',
  'title': 'Using sympy to compute matrix elements',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 12,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'In our next step we define the reference energy $E_0$ and redefine '
          'the Hamiltonian by subtracting the reference energy and collecting '
          'the coefficients for all normal-ordered products (given by the *NO* '
          'function).\n'
          '!bc pyscpro\n'
          'from sympy import symbols, latex, WildFunction, collect, Rational, '
          'simplify\n'
          'from sympy.physics.secondquant import F, Fd, wicks, '
          'AntiSymmetricTensor, substitute_dummies, NO, evaluate_deltas\n'
          '# setup hamiltonian\n'
          "p,q,r,s = symbols('p q r s',dummy=True)\n"
          "f = AntiSymmetricTensor('f',(p,),(q,))\n"
          'pr = Fd(p)*F(q)\n'
          "v = AntiSymmetricTensor('v',(p,q),(r,s))\n"
          'pqsr = Fd(p)*Fd(q)*F(s)*F(r)\n'
          '#define the Hamiltonian\n'
          'Hamiltonian=f*pr + Rational(1)/Rational(4)*v*pqsr\n'
          '#define indices for states above and below the Fermi level\n'
          'index_rule = {\n'
          "     'below':  'kl',\n"
          "     'above':  'cd',\n"
          "     'general': 'pqrs'\n"
          '     }\n'
          'Hnormal = substitute_dummies(Hamiltonian,new_indices=True, '
          'pretty_indices=index_rule)\n'
          'E0 = wicks(Hnormal,keep_only_fully_contracted=True)\n'
          'Hnormal = Hnormal-E0\n'
          "w = WildFunction('w')\n"
          'Hnormal = collect(Hnormal, NO(w))\n'
          'Hnormal = evaluate_deltas(Hnormal)\n'
          'print latex(Hnormal)\n'
          '\n'
          '!ec\n'
          'which gives us \n'
          '!bt\n'
          '\\[\n'
          '- f^{i}_{i} + f^{q}_{p} a^\\dagger_{q} a_{p} - \\frac{1}{4} '
          'v^{ii}_{ii} - \\frac{1}{4} v^{ii}_{ii} + \\frac{1}{4} v^{sr}_{qp} '
          'a^\\dagger_{r} a^\\dagger_{s} a_{q} a_{p},\n'
          '\\]\n'
          '\n'
          '!et\n'
          'again as expected, with the reference energy to be subtracted.',
  'title': 'Using sympy to compute matrix elements',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 13,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'We can now go back to exercise 7 and define the Hamiltonian and the '
          'second-quantized representation of a  three-body Slater '
          'determinant. \n'
          '!bc pyscpro\n'
          'from sympy import symbols, latex, WildFunction, collect, Rational, '
          'simplify\n'
          'from sympy.physics.secondquant import F, Fd, wicks, '
          'AntiSymmetricTensor, substitute_dummies, NO, evaluate_deltas\n'
          '# setup hamiltonian\n'
          "p,q,r,s = symbols('p q r s',dummy=True)\n"
          '\n'
          "v = AntiSymmetricTensor('v',(p,q),(r,s))\n"
          'pqsr = NO(Fd(p)*Fd(q)*F(s)*F(r))\n'
          'Hamiltonian=Rational(1)/Rational(4)*v*pqsr\n'
          "a,b,c,d,e,f = symbols('a,b, c, d, e, f',above_fermi=True)\n"
          '\n'
          'expression = '
          'wicks(F(c)*F(b)*F(a)*Hamiltonian*Fd(d)*Fd(e)*Fd(f),keep_only_fully_contracted=True, '
          'simplify_kronecker_deltas=True)\n'
          'expression = evaluate_deltas(expression)\n'
          'expression = simplify(expression)\n'
          'print latex(expression)\n'
          '\n'
          '!ec\n'
          'resulting in nine terms (as expected), \n'
          '!bt\n'
          '\\[\n'
          ' - \\delta_{a d} v^{cb}_{ef} - \\delta_{a e} v^{cb}_{fd} + '
          '\\delta_{a f} v^{cb}_{ed} - \\delta_{b d} v^{ac}_{ef} - \\delta_{b '
          'e} v^{ac}_{fd} + \\delta_{b f} v^{ac}_{ed} + \\delta_{c d} '
          'v^{ab}_{ef} + \\delta_{c e} v^{ab}_{fd} - \\delta_{c f} '
          'v^{ab}_{ed}\n'
          '\\]\n'
          '\n'
          '!et',
  'title': 'Using sympy to compute matrix elements',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 14,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'What is the diagrammatic representation of the HF equation?\n'
          '!bt\n'
          '\\[\n'
          '-\\langle\\alpha_{k}|u^{HF}|\\alpha_{i}\\rangle+\\sum_{j=1}^{n}\n'
          '\\left[\\langle\\alpha_{k}\\alpha_{j}|\\hat{v}|\\alpha_{i}\\alpha_{j}\\rangle-\n'
          '\\langle\\alpha_{k}\\alpha_{j}|v|\\alpha_{j}\\alpha_{i}\\rangle\\right]=0\n'
          '\\]\n'
          '\n'
          '!et\n'
          '(Represent $(-u^{HF})$ by the symbol $---$X .)',
  'title': 'Diagrammatic representation of Hartree-Fock equations',
  'type': 'Exercise',
  'type_visible': True},
 {'ans_docend': '',
  'answer': '',
  'chapter_exercise': None,
  'chapter_no': None,
  'chapter_title': None,
  'chapter_type': None,
  'closing_remarks': '',
  'file': None,
  'heading': '=====',
  'hints': [],
  'keywords': None,
  'label': None,
  'no': 15,
  'sol_docend': '',
  'solution': '',
  'solution_file': None,
  'subex': [],
  'text': 'Consider the ground state $|\\Phi\\rangle$ \n'
          'of a bound many-particle system of fermions. Assume that we remove '
          'one particle\n'
          'from the single-particle state $\\lambda$ and that our system ends '
          'in a new state\n'
          '$|\\Phi_{n}\\rangle$. \n'
          'Define the energy needed to remove this particle as\n'
          '!bt\n'
          '\\[\n'
          'E_{\\lambda}=\\sum_{n}\\vert\\langle\\Phi_{n}|a_{\\lambda}|\\Phi\\rangle\\vert^{2}(E_{0}-E_{n}),\n'
          '\\]\n'
          '\n'
          '!et\n'
          'where $E_{0}$ and $E_{n}$  are the ground state energies of the '
          'states\n'
          '$|\\Phi\\rangle$  and  $|\\Phi_{n}\\rangle$, respectively.\n'
          ' * Show that\n'
          '!bt\n'
          '\\[\n'
          'E_{\\lambda}=\\langle\\Phi|a_{\\lambda}^{\\dagger}\\left[\n'
          'a_{\\lambda},H \\right]|\\Phi\\rangle,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'where $H$ is the Hamiltonian of this system.\n'
          ' * If we assume that $\\Phi$ is the  Hartree-Fock result, find '
          'the \n'
          'relation between $E_{\\lambda}$ and the single-particle energy\n'
          '$\\varepsilon_{\\lambda}$\n'
          'for states $\\lambda \\leq F$ and $\\lambda >F$, with\n'
          '!bt\n'
          '\\[\n'
          '\\varepsilon_{\\lambda}=\\langle\\lambda|\\hat{t}+\\hat{u}|\\lambda\\rangle,\n'
          '\\]\n'
          '\n'
          '!et\n'
          'and\n'
          '!bt\n'
          '\\[\n'
          '\\langle\\lambda|\\hat{u}|\\lambda\\rangle=\\sum_{\\beta \\leq F}\n'
          '\\langle\\lambda\\beta|\\hat{v}|\\lambda\\beta\\rangle.\n'
          '\\]\n'
          '\n'
          '!et\n'
          'We have assumed an antisymmetrized matrix element here.\n'
          'Discuss the result.\n'
          '\n'
          'The Hamiltonian operator is defined as\n'
          '!bt\n'
          '\\[\n'
          'H=\\sum_{\\alpha\\beta}\\langle\\alpha|\\hat{t}|\\beta\\rangle '
          'a_{\\alpha}^{\\dagger}a_{\\beta}+\n'
          '\\frac{1}{2}\\sum_{\\alpha\\beta\\gamma\\delta}\\langle\\alpha\\beta|\\hat{v}|\\gamma\\delta\\rangle '
          'a_{\\alpha}^{\\dagger}a_{\\beta}^{\\dagger}a_{\\delta}a_{\\gamma}.\n'
          '\\]\n'
          '\n'
          '!et',
  'title': 'Derivation of Hartree-Fock equations',
  'type': 'Exercise',
  'type_visible': True}]